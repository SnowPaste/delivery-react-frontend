[{"/Users/Cindy/Desktop/cs5500/delivery/src/index.js":"1","/Users/Cindy/Desktop/cs5500/delivery/src/App.js":"2","/Users/Cindy/Desktop/cs5500/delivery/src/Restaurant.jsx":"3","/Users/Cindy/Desktop/cs5500/delivery/src/Home.jsx":"4","/Users/Cindy/Desktop/cs5500/delivery/src/Header.jsx":"5","/Users/Cindy/Desktop/cs5500/delivery/src/Cart.jsx":"6","/Users/Cindy/Desktop/cs5500/delivery/src/Order.jsx":"7","/Users/Cindy/Desktop/cs5500/delivery/src/Profile.jsx":"8","/Users/Cindy/Desktop/cs5500/delivery/src/config.js":"9","/Users/Cindy/Desktop/cs5500/delivery/src/AccountForm.jsx":"10"},{"size":311,"mtime":1607622658938,"results":"11","hashOfConfig":"12"},{"size":963,"mtime":1607848013635,"results":"13","hashOfConfig":"12"},{"size":3103,"mtime":1607904953803,"results":"14","hashOfConfig":"12"},{"size":1931,"mtime":1607898945308,"results":"15","hashOfConfig":"12"},{"size":1200,"mtime":1607898860114,"results":"16","hashOfConfig":"12"},{"size":8323,"mtime":1608241090999,"results":"17","hashOfConfig":"12"},{"size":3953,"mtime":1608243286106,"results":"18","hashOfConfig":"12"},{"size":11906,"mtime":1607847897035,"results":"19","hashOfConfig":"12"},{"size":98,"mtime":1608238229050,"results":"20","hashOfConfig":"12"},{"size":3645,"mtime":1607766063606,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"rj2ay1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/Cindy/Desktop/cs5500/delivery/src/index.js",[],["45","46"],"/Users/Cindy/Desktop/cs5500/delivery/src/App.js",[],"/Users/Cindy/Desktop/cs5500/delivery/src/Restaurant.jsx",[],"/Users/Cindy/Desktop/cs5500/delivery/src/Home.jsx",[],"/Users/Cindy/Desktop/cs5500/delivery/src/Header.jsx",[],"/Users/Cindy/Desktop/cs5500/delivery/src/Cart.jsx",[],"/Users/Cindy/Desktop/cs5500/delivery/src/Order.jsx",[],"/Users/Cindy/Desktop/cs5500/delivery/src/Profile.jsx",["47"],"import React from 'react'\nimport Axios from 'axios'\nimport config from './config'\nimport Header from './Header'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Tab from 'react-bootstrap/Tab'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\nimport AccountForm from './AccountForm'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faPlus} from '@fortawesome/free-solid-svg-icons'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport Modal from 'react-bootstrap/Modal'\nimport { FormControl } from 'react-bootstrap'\n\n\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customer_id: this.props.match.params.customer_id,\n      customer: null,\n      accountName: null,\n      addresses: [],\n      creditCards: [],\n      email: null,\n      firstName: null,\n      lastName: null,\n      orderHistory: [],\n      password: null,\n      phoneNumber: null,\n      cart: null,\n      show: false,\n      onEdit: null,\n    }\n  }\n\n  componentDidMount() {\n    Axios.get(config.host + \"/customer/\" + this.state.customer_id)\n      .then(response => {\n        const customer = response.data;\n        this.setState({\n          customer: customer,\n          accountName: customer.accountName,\n          addresses: customer.addressList,  \n          creditCards: customer.creditCards,\n          email: customer.email,\n          firstName: customer.firstName,\n          lastName: customer.lastName,\n          orderHistory: customer.orderHistory,\n          password: customer.password,\n          phoneNumber: customer.phoneNumber,\n          cart: customer.cart\n        })\n      })\n  }\n\n  showPassword (event) {\n    if (event.target.checked === true) {\n      document.getElementById(\"password\").innerHTML = this.state.password;\n    } else {\n      document.getElementById(\"password\").innerHTML = \"********\";\n    }\n  }\n\n  deleteCard(id) {\n    Axios.delete(config.host + '/customer/' + this.state.customer_id + '/delete_card/' + id)\n      .then(response => {\n        window.location.reload();\n      })\n      .catch (error => {\n        console.log(error)\n      })\n  }\n\n  deleteAddress(id) {\n    Axios.delete(config.host + '/customer/' + this.state.customer_id + '/delete_address/' + id)\n      .then(response => {\n        window.location.reload();\n      })\n      .catch (error => {\n        console.log(error)\n      })\n  }\n\n  handleAccountUpdate(event) {\n    if (this.validateEmail(this.state.email) && this.validateString(this.state.firstName) && this.validateString(this.state.lastName) && this.validatePhone(this.state.phoneNumber)) {\n      Axios.put(config.host + \"/customer/\" + this.state.customer_id + \"/update_customer\",\n      {\n        accountName: this.state.accountName,\n        password: this.state.password,\n        addressList: this.state.addresses,\n        cart: this.state.cart,\n        creditCards: this.state.creditCards,\n        email: this.state.email,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        orderHistory: this.state.orderHistory,\n        phoneNumber: this.state.phoneNumber\n      })\n      .then(response => {\n        window.location.reload();\n      })\n      .catch (error => {\n        console.log(error)\n      })\n    }\n  }\n\n  validateEmail(email) {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\n      return true;\n    }\n    alert(\"You have entered an invalid email address!\");\n    window.location.reload();\n    return false;\n  }\n\n  validateString(string) {\n    if (/^[A-Za-z_]+$/.test(string)) {\n      return true;\n    }\n    alert(\"You have entered an invalid name! Only letters and underscores are allowed\");\n    return false;\n  }\n\n  validatePhone(number) {\n    if (/^\\d{10}$/.test(number)) {\n      return true;\n    }\n    alert(\"You have entered an invalid phone number!\");\n    window.location.reload();\n    return false;\n  }\n\n  handleAccountChange(event) {\n    this.setState({\n      [this.state.onEdit]: event.target.value\n    })\n  }\n\n  render() {\n    console.log(this.state.orderDetails);\n    return (\n      <>\n      <Header />\n      <Container className=\"profile\">\n        <h1 style={{textAlign: 'center'}}>Hi, {this.state.firstName}!</h1>\n        <br/>\n        <Tab.Container defaultActiveKey=\"#info\">\n          <Row>\n            <Col sm={4}>\n              <br/>\n              <ListGroup>\n                <ListGroup.Item action href=\"#info\">\n                  My Account\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"#address\">\n                  My Address\n                </ListGroup.Item>\n                <ListGroup.Item action href=\"#cards\">\n                  My Credit Cards\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col sm={8}>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"#info\">\n                  <br/>\n                  <h2>My Account</h2>\n                  <hr/>\n                  <Row>\n                    <Col>\n                      <h5>Account Name: \n                        <FontAwesomeIcon className=\"plus-icon\" icon={faEdit} size=\"sm\" onClick={()=> this.setState({show: true, onEdit: \"accountName\"})}/>\n                      </h5>\n                      <p>{this.state.accountName}</p>\n                    </Col>\n                    <Col>\n                      <h5>Phone Number: \n                        <FontAwesomeIcon className=\"plus-icon\" icon={faEdit} size=\"sm\" onClick={()=> this.setState({show: true, onEdit: \"phoneNumber\"})}/>\n                      </h5>\n                      <p>{this.state.phoneNumber}</p>\n                    </Col>\n                  </Row>\n                  <br/>\n                  <Row>\n                    <Col>\n                      <h5>First Name: \n                        <FontAwesomeIcon className=\"plus-icon\" icon={faEdit} size=\"sm\" onClick={()=> this.setState({show: true, onEdit: \"firstName\"})}/>\n                      </h5>\n                      <p>{this.state.firstName}</p>\n                    </Col>\n                    <Col>\n                      <h5>Last Name: \n                        <FontAwesomeIcon className=\"plus-icon\" icon={faEdit} size=\"sm\" onClick={()=> this.setState({show: true, onEdit: \"lastName\"})}/>\n                      </h5>\n                      <p>{this.state.lastName}</p>\n                    </Col>\n                  </Row>\n                  <br/>\n                  <Row>\n                    <Col>\n                      <h5>Email: \n                        <FontAwesomeIcon className=\"plus-icon\" icon={faEdit} size=\"sm\" onClick={()=> this.setState({show: true, onEdit: \"email\"})}/>\n                      </h5>\n                      <p>{this.state.email}</p>\n                    </Col>\n                    <Col>\n                      <Row>\n                        <Col sm={5}>\n                          <h5>Password: \n                          <FontAwesomeIcon className=\"plus-icon\" icon={faEdit} size=\"sm\" onClick={()=> this.setState({show: true, onEdit: \"password\"})}/>\n                          </h5>\n                        </Col>\n                        <Col sm={7}>\n                        <input type=\"checkbox\" id=\"hide\" onClick={(event) => this.showPassword(event)}/>{' '}\n                        <label htmlFor=\"hide\">Show Password</label>\n                        </Col>\n                      </Row>\n                      <p id=\"password\">********</p>\n                    </Col>\n                  </Row>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"#address\">\n                  <br/>\n                  <h2>My Address</h2>\n                  <br/>\n                  <Row>\n                  {\n                    this.state.addresses.map((address, index) => {\n                      return (\n                        <Card border=\"info\" key={index} style={{ width: '16rem', margin: '2px' }}>\n                          <Card.Header as=\"h4\">Address {index + 1}</Card.Header>\n                          <ListGroup className=\"list-group-flush\">\n                            <ListGroupItem>Address 1: {address.address1}</ListGroupItem>\n                            <ListGroupItem>Address 2: {address.address2}</ListGroupItem>\n                            <ListGroupItem>City: {address.city}</ListGroupItem>\n                            <ListGroupItem>State: {address.state}</ListGroupItem>\n                            <ListGroupItem>Zip: {address.zip}</ListGroupItem>\n                          </ListGroup>\n                          <Card.Body>  \n                          <Button style={{marginRight: \"5px\"}}>Edit</Button>{' '}\n                          <Button variant=\"danger\" onClick={() => this.deleteAddress(address.id)}>Delete</Button>\n                          </Card.Body>\n                        </Card>\n                      )\n                    })\n                  }\n                  <Card border=\"info\" style={{ width: '16rem', margin: '2px', minHeight: '21rem' }}>\n                    <Card.Body style={{textAlign: 'center', paddingTop: \"55%\"}}>\n                    <FontAwesomeIcon className=\"plus-icon\" icon={faPlus} size=\"2x\"/>\n                    </Card.Body>\n                  </Card>\n                  </Row>\n                </Tab.Pane>\n\n                <Tab.Pane eventKey=\"#cards\">\n                  <br/>\n                  <h2>My Credit Cards</h2>\n                  <br/>\n                  <Row>\n                  {\n                    this.state.creditCards.map((card, index) => {\n                      return (\n                        <Card border=\"info\" key={index} style={{ width: '16rem', margin: '2px' }}>\n                          <Card.Header as=\"h4\">Credit Card {index + 1}</Card.Header>\n                          \n                            <ListGroup className=\"list-group-flush\">\n                              <ListGroupItem>Card Number: {card.cardNumber}</ListGroupItem>\n                              <ListGroupItem>First Name: {card.firstName}</ListGroupItem>\n                              <ListGroupItem>Last Name: {card.lastName}</ListGroupItem>\n                              <ListGroupItem>Exp Date: {card.expDate}</ListGroupItem> \n                            </ListGroup>\n                          <Card.Body>    \n                            <Button style={{marginRight: \"5px\"}}>Edit</Button>{' '}\n                            <Button variant=\"danger\" onClick={() => this.deleteCard(card.id)}>Delete</Button>\n                          </Card.Body>\n                        </Card>\n                      )\n                    })\n                  }\n                  <Card border=\"info\" style={{ width: '16rem', margin: '2px', minHeight: '21rem' }}>\n                    <Card.Body style={{textAlign: 'center', paddingTop: \"55%\"}}>\n                    <FontAwesomeIcon className=\"plus-icon\" icon={faPlus} size=\"2x\"/>\n                    </Card.Body>\n                  </Card>\n                  </Row>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n<br/>\n        {/* <AccountForm func=\"update\" id={this.state.customer_id} /> */}\n        <Modal show={this.state.show} onHide={() => this.setState({show: false, onEdit: null})}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update {this.state.onEdit}:</Modal.Title>\n        </Modal.Header>\n        <Modal.Body><FormControl onChange={(event) => {this.handleAccountChange(event)}} /></Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={() => this.handleAccountUpdate()}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </Container>\n      </>\n    )\n  }\n}","/Users/Cindy/Desktop/cs5500/delivery/src/config.js",[],"/Users/Cindy/Desktop/cs5500/delivery/src/AccountForm.jsx",["48","49"],"import React from'react'\nimport Axios from 'axios'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport config from './config'\n\nexport default class AccountForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountName: null,\n      phoneNumber: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null\n    }\n  }\n\n  handleChange (key, event) {\n    this.setState({\n      [key]: event.target.value\n    })\n  }\n\n  handleSubmit () {\n    if (this.validateEmail(this.state.email) && this.validateString(this.state.firstName) && this.validateString(this.state.lastName) && this.validatePhone(this.state.phoneNumber)) {\n      if (this.props.func === 'update') {\n        Axios.put(config.host + \"/customer/\" + this.props.id + \"/update_customer\",\n        {\n          accountName: this.state.accountName,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          phoneNumber: this.state.phoneNumber,\n        })\n      }\n    }\n  }\n\n  validateEmail(email) {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email) || email === null) {\n      return true;\n    }\n    alert(\"You have entered an invalid email address!\");\n    return false;\n  }\n\n  validateString(string) {\n    if (/^[A-Za-z_]+$/.test(string) || string === null) {\n      return true;\n    }\n    alert(\"You have entered an invalid name! Only letters and underscores are allowed\");\n    return false;\n  }\n\n  validatePhone(number) {\n    if (/^\\d{10}$/.test(number) ||  number === null) {\n      return true;\n    }\n    alert(\"You have entered an invalid phone number!\");\n    return false;\n  }\n\n  handleClear (event) {\n    this.setState({\n      accountName: null,\n      phoneNumber: null,\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null\n    })\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      input => (input.value = \"\")\n    );\n  }\n\n  render() {\n    return (\n      <Form ref=\"account-form\">\n        <Row>\n          <Col>\n            <FormControl placeholder=\"Account Name\" onChange={(event) => {this.handleChange('accountName', event)}} />\n          </Col>\n          <Col>\n            <FormControl placeholder=\"Phone Number\" onChange={(event) => {this.handleChange('phoneNumber', event)}}/>\n          </Col>\n        </Row>\n        <br/>\n        <Row>\n          <Col>\n            <FormControl placeholder=\"First Name\" onChange={(event) => {this.handleChange('firstName', event)}}/>\n          </Col>\n          <Col>\n              <FormControl placeholder=\"Last Name\" onChange={(event) => {this.handleChange('lastName', event)}}/>\n          </Col>\n        </Row>\n        <br/>\n        <Row>\n          <Col>\n              <FormControl type=\"email\" placeholder=\"Email\" onChange={(event) => {this.handleChange('email', event)}}/>\n          </Col>\n          <Col>\n              <FormControl type=\"password\" placeholder=\"Password\" onChange={(event) => {this.handleChange('password', event)}}/>\n          </Col>\n        </Row>\n        <br/>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={1}><Button onClick={() => this.handleSubmit()}>Submit</Button></Col>\n          <Col xs={1}><Button onClick={(event) => this.handleClear(event)}>Clear</Button></Col>\n        </Row>\n      </Form>\n    )\n  }\n}",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":13,"column":8,"nodeType":"56","messageId":"57","endLine":13,"endColumn":19},{"ruleId":"54","severity":1,"message":"58","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"54","severity":1,"message":"59","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":18},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'AccountForm' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]